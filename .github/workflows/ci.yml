name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - django-env: django32
            testname: quality-and-jobs
            targets: PYTHON_ENV=py38 requirements.js check_translations_up_to_date validate_translations clean_static static quality validate_js check_keywords
          - django-env: django32
            testname: test-python
            targets: PYTHON_ENV=py38 requirements.js clean_static static validate_python
          - django-env: django32
            testname: acceptance-python
            targets: PYTHON_ENV=py38 requirements.js clean_static static acceptance

    steps:
      - name: Install system Packages
        run: |
          sudo apt update
          sudo apt install make libssl-dev libghc-zlib-dev libcurl4-gnutls-dev libexpat1-dev gettext unzip
          cd /usr/src/
          sudo wget https://github.com/git/git/archive/v2.23.0.tar.gz -O git.tar.gz
          sudo tar -xf git.tar.gz
          cd git-*
          sudo make prefix=/usr/local all
          sudo make prefix=/usr/local install
          git config --global --add safe.directory '*'
          git config --global --add safe.directory /edx/app/ecommerce/ecommerce
          git --version

      - uses: actions/checkout@v2
      - name: Start container
        run: |
          docker-compose -f ./.ci/docker-compose-ci.yml up -d
      - name: Install dependencies
        run: |
          docker exec -t ecommerce_testing bash -c "
            cd /edx/app/ecommerce/ecommerce/ && git config --global --add safe.directory '*' &&
            git config --global --add safe.directory /edx/app/ecommerce/ecommerce &&
            python3 -m pip install tox
          "
      - name: Run tests
        run: |
          docker exec -t -e CI=1 ecommerce_testing bash -c "
            cd /edx/app/ecommerce/ecommerce/ && git config --global --add safe.directory '*' &&
            git config --global --add safe.directory /edx/app/ecommerce/ecommerce &&
            PATH=\$PATH:/edx/app/ecommerce/nodeenvs/ecommerce/bin:/snap/bin
            DJANGO_ENV=${{ matrix.django-env }} make ${{ matrix.targets }}
          "
      - name: Run coverage
        if: matrix.testname == 'test-python'
        run: |
          docker exec ecommerce_testing /edx/app/ecommerce/ecommerce/.ci/run_coverage.sh
      - name: Setup Python
        if: matrix.testname == 'test-python'
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
          architecture: x64
      - name: Report coverage
        if: matrix.testname == 'test-python'
        run: |
          pip install codecov
          codecov

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
          architecture: x64
      - name: Install Dependencies
        run: pip install -r requirements/docs.txt -r requirements/tox.txt
      - name: Build the docs
        run: make docs
